#+title: Implemention of  Adding phonetic translations for renarration web application
#+AUTHOR: Raj Manvar
#+DATE: [2016-06-16 Thu]
#+PROPERTY: results output
#+PROPERTY: exports code
#+SETUPFILE: ../../../org-templates/level-0.org
#+options: ^:nil
#+LATEX: Literal LaTeX code for export


* Imports

** Imports for Python API
#+BEGIN_SRC python :tangle ../../code/app/__init__.py :eval no
# -*- coding: utf-8 -*-
from flask import Flask
from flask import request
from flask_cors import CORS
from flask_cors import CORS

app = Flask(__name__)

CORS(app)


from app import views

#+END_SRC


* APIS

** APIs for phonetic translation

#+BEGIN_SRC python :tangle ../../code/app/views.py :eval no
# -*- coding: utf-8 -*-
from app import app
from flask import request
import requests as req
import bs4
import pickle
from dateutil.parser import parse
from datetime import datetime

word_list = pickle.load( open( "word_list.p", "rb" ) )


@app.route("/translate", methods=['POST'])
def trans():

    sentence = request.json['sentence']
    words = sentence.split()
    answer = []
    for word in words :

        word = word.lower()
        if word in word_list:
            answer.append(word_list[word])
        else :
            answer.append(word)


    return " ".join(answer)

@app.route("/translatelive", methods=['POST'])
def translive():

    sentence = request.json['sentence']
    words = sentence.split()
    answer = []
    for word in words :

        word = word.lower()
        res = req.get('http://www.phonemicchart.com/transcribe/?w='+word)
        soup = bs4.BeautifulSoup(res.text)
        ret = soup.center
        if ret:
            answer.append(ret.string)
        else :
            answer.append(word)


    return " ".join(answer)


@app.route("/test", methods=['GET'])
def test():
    return "some test string"

#+END_SRC


* run

** running the app

#+BEGIN_SRC python :tangle ../../code/run.py :eval no
# -*- coding: utf-8 -*-

#!flask/bin/python
from app import app


app.run(debug=True)


#+END_SRC

* word list

#+BEGIN_SRC python :tangle ../../code/word_list.p :eval no
# -*- coding: utf-8 -*-

[[word_list.p]]


#+END_SRC

